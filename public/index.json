[
{
	"uri": "https://barophobia.co.uk/",
	"title": "Home",
	"tags": [],
	"description": "",
	"content": "Tech Notes Homepage There\u0026rsquo;s stuff on the left, maybe.\n"
},
{
	"uri": "https://barophobia.co.uk/linux/",
	"title": "Linux",
	"tags": [],
	"description": "",
	"content": "Linux "
},
{
	"uri": "https://barophobia.co.uk/cheatsheets/automation/ansible/",
	"title": "Ansible",
	"tags": [],
	"description": "",
	"content": "Ansible Playbooks ansible-playbook \u0026lt;YAML\u0026gt; -i \u0026lt;HOSTSFILE\u0026gt; # Run on all hosts from specified hosts file ansible-playbook \u0026lt;YAML\u0026gt; -C # Test run ansible-playbook \u0026lt;YAML\u0026gt; -C -D # Dry run Check Syntax ansible-playbook --syntax-check \u0026lt;YAML\u0026gt; Execute commands on hosts ansible \u0026lt;HOSTGROUP\u0026gt; -a \u0026lt;COMMAND\u0026gt; Example:\nansible all -a \u0026quot;neofetch\u0026quot; "
},
{
	"uri": "https://barophobia.co.uk/cheatsheets/automation/",
	"title": "Automation",
	"tags": [],
	"description": "",
	"content": "Automation "
},
{
	"uri": "https://barophobia.co.uk/cheatsheets/",
	"title": "Cheatsheets",
	"tags": [],
	"description": "",
	"content": "Cheatsheets "
},
{
	"uri": "https://barophobia.co.uk/cheatsheets/containers/",
	"title": "Containers",
	"tags": [],
	"description": "",
	"content": "Containers "
},
{
	"uri": "https://barophobia.co.uk/webservers/nginx/reverseproxy/",
	"title": "Creating a reverse proxy",
	"tags": [],
	"description": "",
	"content": "Reverse proxy with nginx In this example I will be making a reverse proxy for a calibre server so anywhere it references that service is a variable of whatever service you are setting up.\n  Create a new file inside /etc/nginx/sites-available/calibre\n  Now edit the file and add the following\n  server { listen 80; client_max_body_size 64M; # To upload large books (Change where required) server_name calibre.example.com ; location / { proxy_pass http://127.0.0.1:8080; } } You can now navigate to the server_name address you set and it will work as expected.\nIt is recommended to issue a cert and use HTTPS this can be done with certbot.\n"
},
{
	"uri": "https://barophobia.co.uk/cheatsheets/containers/docker/",
	"title": "Docker",
	"tags": [],
	"description": "",
	"content": "Docker Docker basics docker start \u0026lt;CONTAINER\u0026gt; #start container docker restart \u0026lt;CONTAINER\u0026gt; #restart container docker stop \u0026lt;CONTAINER\u0026gt; #stop container docker rm \u0026lt;CONTAINER\u0026gt; #remove a container Listing containers docker ps #list running containers docker ps -a #list all containers docker ps -s #list running containers with system specs Image management docker images #list local stored images docker rmi \u0026lt;IMAGE\u0026gt; #remove a local image docker save -o \u0026lt;TARBALL\u0026gt; \u0026lt;IMAGE\u0026gt; #Save a local image as a tarball so you can archive or inspect the image. docker history \u0026lt;IMAGE\u0026gt; #Shows image creation history Building Images docker build . docker build --build-arg ARG=VALUE . # pass variables with build arg Networks docker network ls # shows docker network info docker network rm \u0026lt;NETWORKID\u0026gt; #Remove a network using the ID "
},
{
	"uri": "https://barophobia.co.uk/vmware/fusion/",
	"title": "Fusion",
	"tags": [],
	"description": "",
	"content": "Fusion Install using brew: If you have brew on mac then just run this command to install vmware-fusion.\nbrew install --cask vmware-fusion Install using DMG provided by VMWare  Download the file from the link below:  https://www.vmware.com/uk/products/fusion/fusion-evaluation.html\n Open the DMG file and double click install, the installer will ask for your password and automatically install.  "
},
{
	"uri": "https://barophobia.co.uk/git/",
	"title": "Git",
	"tags": [],
	"description": "",
	"content": "Git What is Git? Git is a version management tool used to make collaborative efforts a lot easier.\nCreating a new repository: To create a new repository using git you should cd to the folder you want to be a repository and type into your terminal:\ngit init This will create a .git directory known as the working tree.\nChecking the status of your repository Using the \u0026lsquo;git status\u0026rsquo; command will show you what branch you are using, changed files not staged for commit and files that are not currently tracked by git.\ngit status Adding files to your repository to be tracked To add files to be tracked you will need to use \u0026lsquo;git add\u0026rsquo; an example of this would be:\ngit add . Using the command above will add all files inside the folder to be tracked.\nCommiting changes to the repository git commit This command will commit the changes that have been added to the repository, it will bring up your default text editor and ask for a commit message, this is what will be seen when you look at repository history.\nI prefer to use the \u0026lsquo;-m\u0026rsquo; switch on my commit and then type the message inside the command meaning it skips the extra step of using a text editor.\ngit commit -m \u0026quot;MESSAGE GOES HERE\u0026quot; Showing the history of the repository git log This command will show you the commits to the project you are looking at, each commit has a unique name called the git hash these are not randomly generated they are generated using SHA-1. The output also shows you the author, commit message and date and time of the commit.\nIt is useful to see what the project looked like at each stage of the commits so if needed you can restore to a previous state.\n"
},
{
	"uri": "https://barophobia.co.uk/git/branches/",
	"title": "Git Branches",
	"tags": [],
	"description": "",
	"content": "Git Branches Creating new branches If you have multiple people who contribute to a project then it may be useful to create a new branch so that the master branch is always working and correct.\nTo create a new branch you can use this command.\ngit branch X X = name of the new branch\nnow a new branch has been made but you are not on the branch yet, to switch to a new branch use:\ngit switch X X = name of the branch to switch to\nYou are now on the new branch.\nyou could also use:\ngit switch -c X X = new branch name\nthis will create and switch you to the new branch that you have created.\nListing branches To see local branches, run this command:\ngit branch To see remote branches, run this command:\ngit branch -r To see all local and remote branches, run this command:\ngit branch -a The current branch will be marked with an asterix.\n"
},
{
	"uri": "https://barophobia.co.uk/nxlog/howtoconfigurenxlog/",
	"title": "How to configure NXLog",
	"tags": [],
	"description": "",
	"content": "How to configure NXLog Windows   Edit the nxlog.conf file inside C:\\Program Files (x86)\\nxlog\\conf\n  At the bottom of the notepad will be some commented out lines that are similar to the lines below, remove the hashes so they arent commented out and make sure the output is correctly configured to the syslog server\u0026rsquo;s IP using the correct Module (TCP/UDP) and Port.\n  When you edit the nxlog.conf file make sure you restart the nxlog service.\n  # Modules section \u0026lt;Input in\u0026gt; Module im_msvistalog \u0026lt;/Input\u0026gt; \u0026lt;Output out\u0026gt; Module om_udp Host IP_ADDRESS Port 514 Exec to_syslog_snare(); \u0026lt;/Output\u0026gt; # Route section \u0026lt;Route 1\u0026gt; Path in =\u0026gt; out \u0026lt;/Route\u0026gt; Sending Logs as JSON  Edit nxlog.conf and change the Extension and Output to look like the lines below  \u0026lt;Extension json\u0026gt; Module xm_json \u0026lt;/Extension\u0026gt; \u0026lt;Output out\u0026gt; Module om_tcp Host IP_ADDRESS Port 514 Exec to_json(); \u0026lt;/Output\u0026gt; "
},
{
	"uri": "https://barophobia.co.uk/nxlog/howtoinstallnxlog/",
	"title": "How to install NXLog",
	"tags": [],
	"description": "",
	"content": "How to install NXLog Windows Download NXLog from the website - NXLog Downloads\nInstall using the .exe you just downloaded, if you choose a custom install path make sure you remember where it is.\nOnce you have configured the nxlog.conf start the nxlog service in the services applet.\nIf you have any issues there is a log file in the INSTALL_PATH\\data\\nxlog.txt this should give some information on what the issue is.\n"
},
{
	"uri": "https://barophobia.co.uk/linux/mountnfs/",
	"title": "How to mount a network share",
	"tags": [],
	"description": "",
	"content": "How to mount a network share NFS Mounting an NFS share requires nfs-common. To install:\napt install nfs-common To mount an NFS network share use the command below:\nmount -t nfs -o 192.168.0.100:/backups Replace the IP Address and share location to your required config.\n"
},
{
	"uri": "https://barophobia.co.uk/webservers/nginx/dirandfiles/",
	"title": "Important Directories and Files",
	"tags": [],
	"description": "",
	"content": "Important nginx Directories and files Content /var/www/html The actual web content, which by default only consists of the default Nginx page you saw earlier, is served out of the /var/www/html directory. This can be changed by altering Nginx configuration files.\nServer Configuration /etc/nginx The Nginx configuration directory. All of the Nginx configuration files reside here.\n/etc/nginx/nginx.conf The main Nginx configuration file. This can be modified to make changes to the Nginx global configuration.\n/etc/nginx/sites-available/ The directory where per-site server blocks can be stored. Nginx will not use the configuration files found in this directory unless they are linked to the sites-enabled directory. Typically, all server block configuration is done in this directory, and then enabled by linking to the other directory.\n/etc/nginx/sites-enabled/ The directory where enabled per-site server blocks are stored. Typically, these are created by linking to configuration files found in the sites-available directory.\n/etc/nginx/snippets This directory contains configuration fragments that can be included elsewhere in the Nginx configuration. Potentially repeatable configuration segments are good candidates for refactoring into snippets.\nServer Logs /var/log/nginx/access.log Every request to your web server is recorded in this log file unless Nginx is configured to do otherwise.\n/var/log/nginx/error.log Any Nginx errors will be recorded in this log.\n"
},
{
	"uri": "https://barophobia.co.uk/webservers/nginx/installation/",
	"title": "Installing Nginx",
	"tags": [],
	"description": "",
	"content": "Installing Nginx Installing nginx on Linux Ubuntu:\napt install nginx You may need to adjust UFW rules to allow access to the webserver.\nChecking if your webserver is running systemctl status nginx Managing the nginx process To stop nginx:\nsystemctl stop nginx To start nginx:\nsystemctl start nginx To restart nginx:\nsystemctl restart nginx If you only make configuration changes you can reload without dropping connections:\nsystemctl reload nginx "
},
{
	"uri": "https://barophobia.co.uk/cheatsheets/kubernetes/",
	"title": "Kubernetes",
	"tags": [],
	"description": "",
	"content": "Kubernetes Installing Minikube (Mac) brew cask install minikube "
},
{
	"uri": "https://barophobia.co.uk/linux/maintainingaserver/",
	"title": "Maintaining a Linux Server",
	"tags": [],
	"description": "",
	"content": "Maintaining a Linux Server Keep packages up to date All Linux distributions use package managers to easily be able to install and update packages without having to manually download them.\nOn debian the package manager is apt.\napt update apt upgrade Keeping the server up to date should be minimum maintenance required for your server as not only do up to date packages often offer more features but they also fix security bugs and vulnerabilities.\n"
},
{
	"uri": "https://barophobia.co.uk/webservers/nginx/",
	"title": "Nginx",
	"tags": [],
	"description": "",
	"content": "Nginx "
},
{
	"uri": "https://barophobia.co.uk/nxlog/",
	"title": "NXLog",
	"tags": [],
	"description": "",
	"content": "NXLog "
},
{
	"uri": "https://barophobia.co.uk/linux/oracle-linux/",
	"title": "Oracle Linux",
	"tags": [],
	"description": "",
	"content": "Oracle Linux Oracle linux or Oracle Enterprise Linux (OEL) is a linux distribution freely distributed by Oracle. It is compiled from Red Hat (RHEL) source code.\n"
},
{
	"uri": "https://barophobia.co.uk/cheatsheets/system-administration/powershell/",
	"title": "Powershell",
	"tags": [],
	"description": "",
	"content": "Powershell a lot of powershell commands have aliases that are similar to linux.\nBasic\nls # Shows current directory cd \u0026lt;DIRECTORY\u0026gt; # Change directory to specified directory mkdir \u0026lt;NEWDIRECTORYNAME\u0026gt; # Create a new folder copy \u0026lt;FILETOCOPY\u0026gt; \u0026lt;PATHTOCOPYTO\u0026gt; # Copy a folder/file to a different place move \u0026lt;FILETOMOVE\u0026gt; \u0026lt;PATHTOCOPYTO\u0026gt; # Move a folder/file to a different place rm \u0026lt;FILETOREMOVE\u0026gt; # Remove a file "
},
{
	"uri": "https://barophobia.co.uk/linux/raspberrypi/",
	"title": "Raspberry Pi",
	"tags": [],
	"description": "",
	"content": "Raspberry Pi "
},
{
	"uri": "https://barophobia.co.uk/linux/raspberrypi/preprpi/",
	"title": "Setup Headless Raspberry Pi",
	"tags": [],
	"description": "",
	"content": "Setup a headless Raspberry Pi Requirements\n Raspberry Pi with power supply SD Card  Imaging the SD Card: Download Raspbian lite (this has no DE, if you want a DE download the full iso image not lite) Raspbian Downloads\nUse an application like EthcherBalena to write to the SD Card.\nSteps to take once the image is written to the SD Card: Once the image is written to the SD Card open a terminal and browse to the the SD Card (Usually /Volumes/boot/).\nIf you want to enable SSH then make a file called \u0026lsquo;ssh\u0026rsquo; make sure the file has no extensions if you are doing this on windows.\nEnable SSH: Linux or mac:\ntouch ssh Windows:\nNew-Item ssh Now add create a file called wpa_supplicant.conf and add the config below changing the network information to your own.\nnetwork={ ssid=\u0026quot;ssid_name\u0026quot; psk=\u0026quot;password\u0026quot; } Once these steps are completed, plug the SD Card in and boot the Raspberry Pi.\nNow there are two options to accessing the device:\nssh pi@raspberry.local or\nFind the IP on your router or use nmap to find the IP then:\nssh pi@\u0026lt;IPADDRESS\u0026gt; The default password is raspberry.\nYou should now have access to your device without having to plug in a monitor.\n"
},
{
	"uri": "https://barophobia.co.uk/cheatsheets/system-administration/",
	"title": "System Administration",
	"tags": [],
	"description": "",
	"content": "System Administration "
},
{
	"uri": "https://barophobia.co.uk/cheatsheets/automation/terraform/",
	"title": "Terraform",
	"tags": [],
	"description": "",
	"content": "Terraform terraform plan # dry run terraform apply # apply configuration changes terraform refresh # synchronise state with the resource terraform destroy # destroy current configuration State management terraform state list # this will show the resources in the state file terraform state rm \u0026lt;RESOURCE\u0026gt; # remove a resource from the state list Correcting formatting terraform fmt #reformats .tf files for better readability Remote Exec This is used for remotely executing a command.\nprovisioner \u0026quot;remote-exec\u0026quot; { inline = [ \u0026quot;apt install neofetch\u0026quot; ] } "
},
{
	"uri": "https://barophobia.co.uk/linux/ufw/",
	"title": "Uncomplicated Firewall (UFW)",
	"tags": [],
	"description": "",
	"content": "UFW Installation: Debian:\napt install ufw Check the status of UFW: You can check the status of ufw by running:\nufw status Without any changes it will most likely report back \u0026lsquo;Status: Inactive\u0026rsquo;\nSet up UFW to allow SSH or port 22: Here we will set up UFW to allow port 22 (SSH) connections so that once the UFW is enabled you are still able to SSH into the machine.\n First lets deny all incoming connections by default.  ufw default deny incoming  Now lets allow ssh or port 22 - there are 2 ways of doing this.  ufw allow in ssh or\nufw allow in 22  Once this is set we can enable the UFW.  ufw enable View all your rules: ufw status verbose Delete a rule: To delete a rule for example the SSH rule, run:\nufw delete allow in 'SSH' Once the rule is deleted, reload UFW\nufw reload Disable UFW: ufw disable "
},
{
	"uri": "https://barophobia.co.uk/linux/oracle-linux/updateoffline/",
	"title": "Updating Oracle Linux",
	"tags": [],
	"description": "",
	"content": "Updating Oracle Linux Check your current Oracle Linux Version: cat /etc/oracle-release The output of this command will be the version of your machine.\nWith internet: With internet updating and upgrading oracle linux is as simple as using the following command\nsudo yum update -y \u0026amp;\u0026amp; sudo yum upgrade -y This will check you have the latest update information. The upgrade command will actually upgrade the software on your machine.\nWithout internet: To complete an offline upgrade of an oracle linux system there is a requirement that you have the oracle ISO file that is a higher version.\n Mount the ISO to a mount point (I am using /mnt/iso)  mkdir /mnt/iso mount -o ro ORACLE_ISO.iso /mnt/iso  Disable the Online repository  sudo vi /etc/yum.repos.d/public.repo Inside this file there will be a list of repos, change the enable variable to 0 (enable=0)\n Create a local repo  sudo vi local.repo Inside the new file write this:\n[localRepo] name=localRepo baseurl=file:///mnt/iso/ gpgcheck=0 enabled=1 Now save and exit the file.\n Clean the yum package manager cache  sudo yum clean all  Check the local repo is enable and being used  sudo yum repolist all In the output you should see the localRepo and it should be enabled.\n Now update the system  sudo yum update -y --skip-broken  Restart the system to ensure the updates are installed as expected.  sudo reboot or\nsystemctl reboot After offline update clean up  unmount the ISO  umount /mnt/iso  clean the yum cache  yum clean all  Remove the ISO  rm ORACLE_ISO After completing these steps you could go further and remove the local repo but I wouldn\u0026rsquo;t recommend it as you can use the same repo in the future to make upgrades a bit smoother as long as you mount in the same directory.\n"
},
{
	"uri": "https://barophobia.co.uk/usage/",
	"title": "Usage",
	"tags": [],
	"description": "",
	"content": "Content Usage Feel free to use or copy any information on this website, information should be free.\nIf you want the raw files of the website you can clone the repo from github:\ngit clone https://github.com/Barophobia/techdocs "
},
{
	"uri": "https://barophobia.co.uk/linux/dnsmasq/",
	"title": "Using DNSMasq for DNS",
	"tags": [],
	"description": "",
	"content": "Install DNSMasq Install DNSMasq Debian:\napt install dnsmasq "
},
{
	"uri": "https://barophobia.co.uk/vmware/",
	"title": "VMWare",
	"tags": [],
	"description": "",
	"content": "VMWare "
},
{
	"uri": "https://barophobia.co.uk/webservers/",
	"title": "Webservers",
	"tags": [],
	"description": "",
	"content": "Webservers "
},
{
	"uri": "https://barophobia.co.uk/linux/installarch/",
	"title": "WIP How to install Arch Linux",
	"tags": [],
	"description": "",
	"content": "How to install Arch Linux Arch linux is a sort of \u0026lsquo;build it yourself\u0026rsquo; OS allowing you to create the environment you desire, I use this to have a low resource requirement extending the life of \u0026lsquo;old\u0026rsquo; hardware but it can be used for more than that.\nSteps to install Arch Linux Download the Arch Linux ISO from the website. https://www.archlinux.org\nIf you are building a virtual machine just mount the ISO to the machine and boot to it.\nIf you are building a physical machine you will need to use a tool like balenaEtcher to build a live USB. If you don\u0026rsquo;t want to use a tool then you can use the command below on Linux and change it to your path.\ndd bs=4M if=/path/to/archlinux.iso of=/dev/sdx status=progress \u0026amp;\u0026amp; sync Now boot to Arch Linux, this will take you to a live terminal session.\nFirstly, check your network connection using ping and ip link.\nping archlinux.org ip link will show you available interfaces.\nip link If you would like to use Wi-Fi:\nwifi-menu Now set your time and date using NTP:\ntimedateclt set-ntp trueß list all disk and partitions:\nfdisk -l Now select the disk you are going to format and partition:\ncfdisk /dev/sda This will bring up a screen asking to select the label type, choose: \u0026lsquo;gpt\u0026rsquo;\n"
},
{
	"uri": "https://barophobia.co.uk/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://barophobia.co.uk/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]